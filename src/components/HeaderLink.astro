---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, ...props } = Astro.props as Props;

const { pathname } = Astro.url;
const isActive = href === pathname || href === pathname.replace(/\/$/, '');
---
<header-link>
  <a
    href={href}
    class:list={[
      'inline-block',
      'hover:scale-125',
      'transition-transform',
      'text-black',
      'text-xl',
      [
        { 'active font-bold underline underline-offset-8': isActive },
        { 'font-medium no-underline': !isActive },
      ]
    ]}
    {...props}
  >
    <slot />
  </a>
</header-link>
<script>
 import { $color } from "../store";

  class HeaderLink extends HTMLElement {
    constructor() {
      super();
    }
    connectedCallback() {
      const a = this.querySelector('a') as HTMLAnchorElement;
      $color.subscribe(c => a.style.color = `#${c}`);
      const { textContent } = a;
      a.textContent = textContent ? textContent.toUpperCase() : null;
    }
  }
  customElements.define('header-link', HeaderLink)
</script>