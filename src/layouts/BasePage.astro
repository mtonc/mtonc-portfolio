--- 
import Header from '../components/CustomHeader.astro';
import Footer from '../components/Footer.astro';
import { CldImage } from 'astro-cloudinary';

interface Props {
  title: string;
  description?: string;
  heroImage?: string | undefined;
  heroAlt?: string;
  showTitle?: boolean;
  color?: string;
}

const { title, description = '', heroImage = undefined, heroAlt = '', showTitle = false, color = 'green'} = Astro.props;
const showSection = heroImage || (title && showTitle );
---
<base-page data-color={color}>
  <Header />
    <main class="flex flex-col items-center h-(--main-height) overflow-y-auto">
      { showSection && <section class="mt-4 flex flex-col items-center">
        {heroImage && <CldImage width={720} height={360} src={heroImage} alt={heroAlt} />}
        {title && showTitle && <h1 class="my-3 text-center">{title}</h1>}
        {description && <span class="text-center text-lg">{description}</span>}
      </section> }
      <slot name="blog-post">
        <section class="p-4 flex w-full md:w-4/5 items-center flex-col">
          <slot/>
        </section>
      </slot>
    </main>
  <Footer />
</base-page>
<script>
  import { $activeColor, $activeSet } from "../store.ts";

  class BasePage extends HTMLElement {
    constructor() {
      super();
    }
    connectedCallback() {
      const body = document.body as HTMLBodyElement;
      $activeSet.subscribe((newSet, oldSet) => {
        if (oldSet && body.classList.contains(oldSet.bg)) {
          body.classList.remove(oldSet.bg);
        }
        body.classList.add(newSet.bg);
      });
      $activeColor.set(this.dataset.color || 'green');
    }
  }

  customElements.define('base-page', BasePage);
</script>
